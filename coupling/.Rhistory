abline(lm(lh_and_rh_rowmeans~age), col = 'red')
dev.off()
#visreg
df <- data.frame(cbind(lh_and_rh_rowmeans, age))
names(df) <- c("Means", "Age")
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg.jpg'))
fit <- lm(Means~Age, data=df)
visreg(fit, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
jpeg(paste0(homedir, 'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg_gam.jpg'))
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
install.packages("devtools")
install.packages("gratia")
library(mgcv)
library(dplyr)
library(ggplot2)
library(visreg)
#set home directory, switch this depending on whether running from PMACS or from home directory
#homedir <- "/Users/eballer/BBL/imco/pmacs/PMACS_remote/"
homedir <- "/project/imco/"
numrows = 831
# read in lh and rh matrices, which have demos appended
lh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_lh_", numrows, "x10242.csv"), sep = ",")
rh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_rh_", numrows, "x10242.csv"), sep = ",")
#just get the coupling values
lh_matrix <- lh_df[,(dim(lh_df)[2]-10241):dim(lh_df)[2]]
rh_matrix <- rh_df[,(dim(rh_df)[2]-10241):dim(rh_df)[2]]
### Find Gam age FDR corrected
### just for age
lh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_fdr05.csv'), header = F)
rh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_fdr05.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_fdr05$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_fdr05$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_fdr_corrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_fdr_corrected) #make vector of row means
age = lh_df$ageAtScan1
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
install.packages("gratia")
install.packages("devtools")
install.packages("gratia")
which R
install.packages("gratia")
install.packages("mgcv")
install.packages("mcgv")
library(mgcv)
library(dplyr)
library(ggplot2)
library(visreg)
install.packages("gratia")
R.Version()
devtools::install_github('gavinsimpson/gratia')
install.packages("devtools")
install.packages("gratia")
###########
## Plots ##
###########
###pre: gam age results, both fdr and uncorrected. rh and lh matrices
###post: jpegs of linear and gam models, and derivatives
###uses: makes the scatter plot of age by couping means for Figure 2
### dependencies: R 3.6.3
library(mgcv)
library(dplyr)
library(ggplot2)
library(visreg)
library(gratia)
#set home directory, switch this depending on whether running from PMACS or from home directory
#homedir <- "/Users/eballer/BBL/imco/pmacs/PMACS_remote/"
homedir <- "/project/imco/"
numrows = 831
# read in lh and rh matrices, which have demos appended
lh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_lh_", numrows, "x10242.csv"), sep = ",")
rh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_rh_", numrows, "x10242.csv"), sep = ",")
#just get the coupling values
lh_matrix <- lh_df[,(dim(lh_df)[2]-10241):dim(lh_df)[2]]
rh_matrix <- rh_df[,(dim(rh_df)[2]-10241):dim(rh_df)[2]]
### Find Gam age FDR corrected
### just for age
lh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_fdr05.csv'), header = F)
rh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_fdr05.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_fdr05$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_fdr05$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_fdr_corrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_fdr_corrected) #make vector of row means
age = lh_df$ageAtScan1
#plot and save
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_fdr05.jpg'))
plot(age, lh_and_rh_rowmeans, ylab = "Coupling (Z)", xlab = "Age (In Years)", main = "Mean Coupling by Age")
abline(lm(lh_and_rh_rowmeans~age), col = 'red')
dev.off()
#visreg
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_fdr05_visreg.jpg'))
fit <- lm(Means~Age, data=df)
visreg(fit, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
jpeg(paste0(homedir, 'baller/results/images/Mean_coupling_by_age_rplot_fdr05_visreg_gam.jpg'))
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
d<-derivatives(fit_gam,n=1000)
jpeg(paste0(homedir, 'baller/results/images/deriv_plot_age_gam_fdr_corrected.jpg'))
d_plot <- draw(d)
print(d_plot)
dev.off
d<-derivatives(fit_gam,n=1000)
jpeg(paste0(homedir, 'baller/results/images/deriv_plot_age_gam_fdr_corrected.jpg'))
d_plot <- draw(d)
print(d_plot)
dev.off
jpeg(paste0(homedir, 'baller/results/images/deriv_plot_age_gam_fdr_corrected.jpg'))
jpeg(paste0(homedir, 'baller/results/images/deriv_plot_age_gam_fdr_corrected.jpg'))
draw(d)
dev.off
ggsave(plot = d_plot,filename = "derivative_plot_age_gam_fdr_corrected.png",device = "png",width = 180,height = 120,units = "mm")
knitr::include_graphics("derivative_plot_age_gam_fdr_corrected.png")
ggsave(plot = d_plot,filename = "derivative_plot_age_gam_fdr_corrected.png",device = "png",width = 180,height = 120,units = "mm")
#knitr::include_graphics("derivative_plot_age_gam_fdr_corrected.png")
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
ggsave(plot = d_plot,filename = "derivative_fig.png",device = "png",width = 180,height = 120,units = "mm")
knitr::include_graphics("derivative_fig.png")
ggsave(plot = d_plot,filename = paste0(homedir, "baller/results/images/derivative_plot_age_gam_fdr_corrected.png"),device = "png",width = 180,height = 120,units = "mm")
#knitr::include_graphics("derivative_plot_age_gam_fdr_corrected.png")
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
lh_gam_age_t_uncor <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_uncor.csv'), header = F)
rh_gam_age_t_uncor <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_uncor.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_uncor$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_uncor$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_uncorrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_uncorrected) #make vector of row means
age = lh_df$ageAtScan1
#age_x2_for_plotting <- c(subjDemos$ageAtScan1, subjDemos$ageAtScan1) #make vector of ages
#plot and save
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_uncor.jpg'))
plot(age, lh_and_rh_rowmeans, ylab = "Coupling (Z)", xlab = "Age (In Years)", main = "Mean Coupling by Age")
abline(lm(lh_and_rh_rowmeans~age), col = 'red')
dev.off()
#visreg
df <- data.frame(cbind(lh_and_rh_rowmeans, age))
names(df) <- c("Means", "Age")
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg.jpg'))
fit <- lm(Means~Age, data=df)
visreg(fit, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
jpeg(paste0(homedir, 'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg_gam.jpg'))
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
######## Deriatives ########
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
ggsave(plot = d_plot,filename = paste0(homedir, "baller/results/images/derivative_plot_age_gam_uncorrected.png"),device = "png",width = 180,height = 120,units = "mm")
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
> cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
> cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
d<- d %>%
)
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
ggsave(plot = d_plot,filename = paste0(homedir, "baller/results/images/derivative_plot_age_gam_uncorrected.png"),device = "png",width = 180,height = 120,units = "mm")
d<- d %>%
mutate(sig = !(0 > lower & 0 < upper)) #Ages where the CI does not include zero
> cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
d<- d %>%
mutate(sig = !(0 > lower & 0 < upper)) #Ages where the CI does not include zero
> cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T])))
#just get the coupling values
lh_matrix <- lh_df[,(dim(lh_df)[2]-10241):dim(lh_df)[2]]
rh_matrix <- rh_df[,(dim(rh_df)[2]-10241):dim(rh_df)[2]]
### Find Gam age FDR corrected
### just for age
lh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_fdr05.csv'), header = F)
rh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_fdr05.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_fdr05$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_fdr05$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_fdr_corrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_fdr_corrected) #make vector of row means
age = lh_df$ageAtScan1
#plot and save
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_fdr05.jpg'))
plot(age, lh_and_rh_rowmeans, ylab = "Coupling (Z)", xlab = "Age (In Years)", main = "Mean Coupling by Age")
abline(lm(lh_and_rh_rowmeans~age), col = 'red')
dev.off()
#visreg
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_fdr05_visreg.jpg'))
fit <- lm(Means~Age, data=df)
visreg(fit, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
jpeg(paste0(homedir, 'baller/results/images/Mean_coupling_by_age_rplot_fdr05_visreg_gam.jpg'))
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
#################
## Derivatives ##
#################
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
ggsave(plot = d_plot,filename = paste0(homedir, "baller/results/images/derivative_plot_age_gam_fdr_corrected.png"),device = "png",width = 180,height = 120,units = "mm")
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T]))) #this only work
### Find Gam age uncorrected
### just for age
lh_gam_age_t_uncor <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_uncor.csv'), header = F)
rh_gam_age_t_uncor <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_uncor.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_uncor$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_uncor$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_uncorrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_uncorrected) #make vector of row means
age = lh_df$ageAtScan1
#age_x2_for_plotting <- c(subjDemos$ageAtScan1, subjDemos$ageAtScan1) #make vector of ages
#plot and save
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_uncor.jpg'))
plot(age, lh_and_rh_rowmeans, ylab = "Coupling (Z)", xlab = "Age (In Years)", main = "Mean Coupling by Age")
abline(lm(lh_and_rh_rowmeans~age), col = 'red')
dev.off()
#visreg
df <- data.frame(cbind(lh_and_rh_rowmeans, age))
names(df) <- c("Means", "Age")
jpeg(paste0(homedir,'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg.jpg'))
fit <- lm(Means~Age, data=df)
visreg(fit, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
jpeg(paste0(homedir, 'baller/results/images/Mean_coupling_by_age_rplot_uncor_visreg_gam.jpg'))
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
dev.off()
######## Deriatives ########
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
ggsave(plot = d_plot,filename = paste0(homedir, "baller/results/images/derivative_plot_age_gam_uncorrected.png"),device = "png",width = 180,height = 120,units = "mm")
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T])))
library(mgcv)
library(dplyr)
library(ggplot2)
library(visreg)
library(gratia)
#set home directory, switch this depending on whether running from PMACS or from home directory
#homedir <- "/Users/eballer/BBL/imco/pmacs/PMACS_remote/"
homedir <- "/project/imco/"
numrows = 831
# read in lh and rh matrices, which have demos appended
lh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_lh_", numrows, "x10242.csv"), sep = ",")
rh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_rh_", numrows, "x10242.csv"), sep = ",")
#just get the coupling values
lh_matrix <- lh_df[,(dim(lh_df)[2]-10241):dim(lh_df)[2]]
rh_matrix <- rh_df[,(dim(rh_df)[2]-10241):dim(rh_df)[2]]
### Find Gam age FDR corrected
### just for age
lh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_fdr05.csv'), header = F)
rh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_fdr05.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_fdr05$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_fdr05$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_fdr_corrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_fdr_corrected) #make vector of row means
age = lh_df$ageAtScan1
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T])))
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) + geom_line(size=1,show.legend = F) +scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) + geom_hline(yintercept = 0,linetype=2)
d_plot
big_plot <- visualize_model(modobj = model,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
install.packages("regclass")
library(regclass)
big_plot <- visualize_model(modobj = model,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
big_plot <- visualize_model(M = fit_gam,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
big_plot
print(big_plot)
big_plot <- visualize_model(modobj = fit_gam,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
big_plot <- visualize_model(M = fit_gam) #,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
big_plot
print(big_plot)
fit_gam
visualize_model(fit_gam)
big_plot <- visualize_model(M = d,smooth_var = "age",group_var = "bblid",plabels = "scatter + derivative", derivative_plot = T)
d$derivative
plot(d$derivative, d$age)
plot(d$derivative, d$smooth
)
plot(d$derivative, d$smooth)
d$smooth
d$data
plot(d$derivative, d$data)
plot(d$data, d$derivative)
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) + geom_line(size=1,show.legend = F) +scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) + geom_hline(yintercept = 0,linetype=2)
library(ggplot2)
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) + geom_line(size=1,show.legend = F) +scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) + geom_hline(yintercept = 0,linetype=2)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) +
#geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
#geom_hline(yintercept = 0,linetype=2)
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black"))
#+ geom_hline(yintercept = 0,linetype=2)
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) + geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black"))
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
#geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper))
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA)
d_plot
geom_line(size=1,show.legend = F)
+
geom_line(size=1,show.legend = F)
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F)
d_plot
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
library(mgcv)
library(dplyr)
library(ggplot2)
library(visreg)
library(gratia)
library(regclass)
#set home directory, switch this depending on whether running from PMACS or from home directory
#homedir <- "/Users/eballer/BBL/imco/pmacs/PMACS_remote/"
homedir <- "/project/imco/"
numrows = 831
# read in lh and rh matrices, which have demos appended
lh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_lh_", numrows, "x10242.csv"), sep = ",")
rh_df <- read.table(paste0(homedir, "/baller/results/coupling_accuracy/subjDemos_with_rh_", numrows, "x10242.csv"), sep = ",")
#just get the coupling values
lh_matrix <- lh_df[,(dim(lh_df)[2]-10241):dim(lh_df)[2]]
rh_matrix <- rh_df[,(dim(rh_df)[2]-10241):dim(rh_df)[2]]
### Find Gam age FDR corrected
### just for age
lh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/lh_gam_age_t_fdr05.csv'), header = F)
rh_gam_age_t_fdr05 <- read.csv(paste0(homedir, '/baller/results/coupling_accuracy/rh_gam_age_t_fdr05.csv'), header = F)
#turn 0s into na
lh_gam_to_keep <- lh_gam_age_t_fdr05$V1
lh_gam_to_keep[lh_gam_to_keep==0] <- NA
rh_gam_to_keep <- rh_gam_age_t_fdr05$V1
rh_gam_to_keep[rh_gam_to_keep==0] <- NA
#concatenate rows to keep
lh_and_rh_to_keep <- c(lh_gam_to_keep, rh_gam_to_keep)
columns_to_drop <- which(is.na(lh_and_rh_to_keep))
# concatenate 831x10242 right and left matrices, and drop the columns with NA
lh_and_rh_matrix <- data.frame(cbind(lh_matrix, rh_matrix))
lh_and_rh_matrix_fdr_corrected = subset(lh_and_rh_matrix, select = -(columns_to_drop))
lh_and_rh_rowmeans <- rowMeans(lh_and_rh_matrix_fdr_corrected) #make vector of row means
age = lh_df$ageAtScan1
fit_gam <- gam(Means~s(Age, k = 4, fx=T), data=df)
visreg(fit_gam, "Age", ylab = "Mean Coupling (Z)", xlab = "Age (in Years)",
line=list(col="red"),
points=list(col="black"))
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T])))
d
d<-derivatives(fit_gam,n=1000)
d
summary(d)
d<-derivatives(fit_gam,n=1000)
d_plot <- draw(d)
print(d_plot)
d<- d %>%
mutate(sig = !(0 >lower & 0 < upper)) #Ages where the CI does not include zero
cat(sprintf("\nSignificant change: %1.2f - %1.2f\n",min(d$data[d$sig==T]),max(d$data[d$sig==T])))
d_plot <- ggplot(data = d,aes(x=data,y = derivative,color=sig, ymin=lower,ymax=upper)) +
geom_ribbon(fill="black",alpha=.3,color=NA) +
geom_line(size=1,show.legend = F) +
scale_color_manual(values = c("TRUE" = "firebrick","FALSE" = "black")) +
geom_hline(yintercept = 0,linetype=2)
d_plot
big_plot <- visualize_model(modobj=fit_gam, smooth_var = "Age", plabels = "scatter + derivative", derivative_plot = T)
big_plot <- visualize_model(M=fit_gam, smooth_var = "Age", plabels = "scatter + derivative", derivative_plot = T)
big_plot
visualize_model(M=fit_gam)
x <- visualize_model(M=fit_gam)
x
summary(x)
install.packages("cowplot")
install.packages("cowplot")
lh_gam_age_t_fdr05$V1
head(lh_df)
